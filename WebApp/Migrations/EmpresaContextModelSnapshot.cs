// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data;

namespace WebApp.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    partial class EmpresaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("WebApp.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateSet")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WebApp.Models.Sale", b =>
                {
                    b.Property<string>("SaleClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SaleVehicleId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PaidFull")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("TEXT");

                    b.HasKey("SaleClientId", "SaleVehicleId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("WebApp.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Aspiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyStyle")
                        .HasColumnType("TEXT");

                    b.Property<float>("Bore")
                        .HasColumnType("REAL");

                    b.Property<float>("CityMpg")
                        .HasColumnType("REAL");

                    b.Property<float>("CompressionRatio")
                        .HasColumnType("REAL");

                    b.Property<float>("CurbWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("DriveWheels")
                        .HasColumnType("TEXT");

                    b.Property<string>("EngineLocation")
                        .HasColumnType("TEXT");

                    b.Property<float>("EngineSize")
                        .HasColumnType("REAL");

                    b.Property<string>("EngineType")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuelSystem")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuelType")
                        .HasColumnType("TEXT");

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<float>("HighwayMpg")
                        .HasColumnType("REAL");

                    b.Property<float>("Horsepower")
                        .HasColumnType("REAL");

                    b.Property<float>("Length")
                        .HasColumnType("REAL");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumCylinders")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumDoors")
                        .HasColumnType("TEXT");

                    b.Property<float>("PeakRpm")
                        .HasColumnType("REAL");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<float>("Stroke")
                        .HasColumnType("REAL");

                    b.Property<float>("WheelBase")
                        .HasColumnType("REAL");

                    b.Property<float>("Width")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
